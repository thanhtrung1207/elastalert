pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    def imageExists = sh(script: "docker images -q elastalert:latest", returnStatus: true) == 0

                    if (!imageExists) {
                        echo 'Image not found locally. Building...'
                        sh 'docker build -t elastalert:latest .'
                    } else {
                        echo 'Image already exists. Skipping build.'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    sh '''
                        docker run -d --name elastalert-container \
                        -v $(pwd)/config.yaml:/app/config.yaml \
                        -v $(pwd)/rules:/app/rules \
                        elastalert:latest
                    '''
                }
            }
        }
    }
    post {
        always {
            script {
                sh 'docker stop elastalert-container || true'
                sh 'docker rm elastalert-container || true'
            }
        }
    }
}
