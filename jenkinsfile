pipeline {
    agent any
    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    // Kiểm tra xem Docker image đã tồn tại chưa
                    def imageExists = sh(script: "docker images -q elastalert:latest", returnStatus: true) == 0
                    if (!imageExists) {
                        echo 'Image not found locally. Building...'
                        sh 'docker build -t elastalert:latest .'
                    } else {
                        echo 'Image already exists. Skipping build.'
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withCredentials([kubeconfigFile(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                        sh 'kubectl apply -f k8s-deployment.yaml'
                        sh 'kubectl rollout status deployment/elastalert'
                    }
                }
            }
            post {
                failure {
                    echo 'Failed'
                }
            }
        }
    }
    post {
        always {
            script {
                sh '''
                    if [ "$(docker ps -q -f name=elastalert-container)" ]; then
                        docker stop elastalert-container || true
                    fi
                    if [ "$(docker ps -aq -f status=exited -f name=elastalert-container)" ]; then
                        docker rm elastalert-container || true
                    fi
                '''
            }
        }
    }
}
