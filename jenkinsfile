pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'trung3108'
        IMAGE_NAME = 'elastalert_container'
        IMAGE_TAG = 'latest'
        KUBECONFIG_CREDENTIALS_ID = 'kubeconfig-id'
        DOCKER_CREDENTIALS_ID = 'docker-credentials-id'
    }

    stages {
        stage('Pull Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        sh "docker pull ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    kubernetesDeploy(
                        configs: 'kubernetes/elastalert-deployment.yaml',
                        kubeconfigId: KUBECONFIG_CREDENTIALS_ID
                    )
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                    if [ "$(docker ps -q -f name=elastalert-container)" ]; then
                        docker stop elastalert-container || true
                    fi
                    if [ "$(docker ps -aq -f status=exited -f name=elastalert-container)" ]; then
                        docker rm elastalert-container || true
                    fi
                '''
            }
        }

        success {
            echo 'Pipeline succeeded'
        }

        failure {
            echo 'Pipeline failed'
        }
    }
}
